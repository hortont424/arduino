// NEEDS SPI

#include "WProgram.h"
#include <SPI.h>

#define DATAOUT 11 // MOSI
#define DATAIN 12 // MISO
#define SPICLOCK 13 // SCLK
#define SLAVESELECT 10 // CS

char color_buffer[64];

static unsigned char uppercase[][8] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x38, 0x44, 0x44, 0x7C, 0x44, 0x44, 0x44, 0x00}, // A == 65
    {0x78, 0x44, 0x44, 0x78, 0x44, 0x44, 0x78, 0x00}, // B == 66
    {0x38, 0x44, 0x40, 0x40, 0x40, 0x44, 0x38, 0x00}, // C == 67
    {0x78, 0x44, 0x44, 0x44, 0x44, 0x44, 0x78, 0x00}, // D == 68
    {0x7C, 0x40, 0x40, 0x78, 0x40, 0x40, 0x7C, 0x00}, // E == 69
    {0x7C, 0x40, 0x40, 0x78, 0x40, 0x40, 0x40, 0x00}, // F == 70
    {0x38, 0x44, 0x40, 0x5C, 0x44, 0x44, 0x38, 0x00}, // G == 71
    {0x44, 0x44, 0x44, 0x7C, 0x44, 0x44, 0x44, 0x00}, // H == 72
    {0x38, 0x10, 0x10, 0x10, 0x10, 0x10, 0x38, 0x00}, // I == 73
    {0x0E, 0x04, 0x04, 0x04, 0x24, 0x24, 0x18, 0x00}, // J == 74
    {0x44, 0x44, 0x48, 0x70, 0x48, 0x44, 0x44, 0x00}, // K == 75
    {0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x78, 0x00}, // L == 76
    {0x82, 0xC6, 0xAA, 0x92, 0x82, 0x82, 0x82, 0x00}, // M == 77
    {0x44, 0x64, 0x54, 0x54, 0x4C, 0x44, 0x44, 0x00}, // N == 78
    {0x38, 0x44, 0x44, 0x44, 0x44, 0x44, 0x38, 0x00}, // O == 79
    {0x70, 0x48, 0x48, 0x70, 0x40, 0x40, 0x40, 0x00}, // P == 80
    {0x38, 0x44, 0x44, 0x44, 0x44, 0x44, 0x38, 0x0C}, // Q == 81
    {0x78, 0x44, 0x44, 0x78, 0x50, 0x48, 0x44, 0x00}, // R == 82
    {0x38, 0x44, 0x40, 0x38, 0x04, 0x44, 0x38, 0x00}, // S == 83
    {0x7C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00}, // T == 84
    {0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x38, 0x00}, // U == 85
    {0x44, 0x44, 0x44, 0x28, 0x28, 0x10, 0x10, 0x00}, // V == 86
    {0x82, 0x82, 0x82, 0x54, 0x54, 0x28, 0x28, 0x00}, // W == 87
    {0x44, 0x44, 0x28, 0x10, 0x28, 0x44, 0x44, 0x00}, // X == 88
    {0x44, 0x44, 0x28, 0x10, 0x10, 0x10, 0x10, 0x00}, // Y == 89
    {0x7C, 0x04, 0x08, 0x10, 0x20, 0x40, 0x7C, 0x00}  // Z == 90
};

void setup()
{
    // SPI Bus setup
    SPI.begin();
    SPI.setClockDivider(2);

    // Set the pin modes for the RGB matrix
    pinMode(DATAOUT, OUTPUT);
    pinMode(DATAIN, INPUT);
    pinMode(SPICLOCK,OUTPUT);
    pinMode(SLAVESELECT,OUTPUT);

    // Make sure the RGB matrix is deactivated
    digitalWrite(SLAVESELECT,HIGH);

    delay(100);

    digitalWrite(SLAVESELECT, LOW);
    delay(10);
    SPI.transfer('%');
    SPI.transfer(1);
    delay(10);
    digitalWrite(SLAVESELECT, HIGH);
}

unsigned char * getCharacter(unsigned char c)
{
    return uppercase[c];
}

unsigned char characterNumber = 0;
char * str = "LIGHTS CAMERA ACTION";
unsigned char initialShift = 0;

void loop()
{
    while(1)
    {
        unsigned char * aid = getCharacter(str[characterNumber]);
        unsigned char * bid = getCharacter(str[characterNumber + 1]);

        for(int i = 0; i < 8; i++)
        {
            unsigned char av = aid[i] << initialShift;
            unsigned char bv = bid[i] >> (8 - initialShift);

            for(int j = 0; j < 8; j++)
            {
                color_buffer[(8 * i) + j] = ((av & 0x01) * 0xE0) + ((bv & 0x01) * 0x0F);

                av >>= 1;
                bv >>= 1;
            }
        }

        if(++initialShift > 7)
        {
            if(++characterNumber > strlen(str) - 2)
            {
                characterNumber = 0;
            }

            initialShift = 0;
        }

        digitalWrite(SLAVESELECT, LOW);
        for(int LED=0; LED<64; LED++)
            SPI.transfer(color_buffer[LED]);
        digitalWrite(SLAVESELECT, HIGH);

        delay(60);
    }
}